{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem vindo atividade complementar de Computa\u00e7\u00e3o Embarcada \u00b6 Prof. Arnaldo Viana Reposit\u00f3rio com todos os arquivos est\u00e1 disponivel em: https://github.com/arnaldojr/ac-embarcados/ Objetivos \u00b6 Ao final da disciplina o aluno ser\u00e1 capaz de: Compreender o conceitos de Computa\u00e7\u00e3o Embarcada Conhecer as principais tecnologias habilitadoras como Raspberry Pi e NVIDIA Jetson Nano Programar e desenvolver pequenos projetos. Id\u00e9ias de projetos \u00b6 Para ajudar a despertar a curiosidade, da uma olhadinha em alguns projetos na aba Dicas.","title":"Home"},{"location":"#bem-vindo-atividade-complementar-de-computacao-embarcada","text":"Prof. Arnaldo Viana Reposit\u00f3rio com todos os arquivos est\u00e1 disponivel em: https://github.com/arnaldojr/ac-embarcados/","title":"Bem vindo atividade complementar de Computa\u00e7\u00e3o Embarcada"},{"location":"#objetivos","text":"Ao final da disciplina o aluno ser\u00e1 capaz de: Compreender o conceitos de Computa\u00e7\u00e3o Embarcada Conhecer as principais tecnologias habilitadoras como Raspberry Pi e NVIDIA Jetson Nano Programar e desenvolver pequenos projetos.","title":"Objetivos"},{"location":"#ideias-de-projetos","text":"Para ajudar a despertar a curiosidade, da uma olhadinha em alguns projetos na aba Dicas.","title":"Id\u00e9ias de projetos"},{"location":"aulas/Dicas/dicas-projetos/","text":"Dicas de projetos \u00b6 Acredito que a melhor forma forma de aprender \u00e9 fazendo. Para ajudar a despertar a curiosidade da uma olhada em alguns sites com projetos bacanas que podemos adaptar e desenvolver. Vale a pena explorar e boraaaa dominar o mundo!! Jetson Nano - Links legais: - Esse \u00e9 um dos maiores foruns que encontrei https://jetsonhacks.com/ - https://all3dp.com/2/best-jetson-nano-projects/ - https://github.com/NVIDIA-AI-IOT/trt_pose - https://www.seeedstudio.com/blog/2021/02/02/jetson-nano-machine-learning-projects-you-need-to-try/ Raspberry PY Links internacionais: projects raspberry pi all3dp seeed studio links nacionais lojamundi projetos raspberry pi filipeflop hw libre usina info canaltech fazedores Progress Continuar... Arduino Links internacionais: hackaday create arduino adafruit sparkfun seeed studio links nacionais all3dp eletrogate flaviobabos kalatec","title":"Dicas de projetos"},{"location":"aulas/Dicas/dicas-projetos/#dicas-de-projetos","text":"Acredito que a melhor forma forma de aprender \u00e9 fazendo. Para ajudar a despertar a curiosidade da uma olhada em alguns sites com projetos bacanas que podemos adaptar e desenvolver. Vale a pena explorar e boraaaa dominar o mundo!! Jetson Nano - Links legais: - Esse \u00e9 um dos maiores foruns que encontrei https://jetsonhacks.com/ - https://all3dp.com/2/best-jetson-nano-projects/ - https://github.com/NVIDIA-AI-IOT/trt_pose - https://www.seeedstudio.com/blog/2021/02/02/jetson-nano-machine-learning-projects-you-need-to-try/ Raspberry PY Links internacionais: projects raspberry pi all3dp seeed studio links nacionais lojamundi projetos raspberry pi filipeflop hw libre usina info canaltech fazedores Progress Continuar... Arduino Links internacionais: hackaday create arduino adafruit sparkfun seeed studio links nacionais all3dp eletrogate flaviobabos kalatec","title":"Dicas de projetos"},{"location":"aulas/lab1/","text":"Raspberry PI \u00b6 Neste laborat\u00f3rio vamos come\u00e7ar nossa jornada de computa\u00e7\u00e3o embarcada com aplica\u00e7\u00f5es simples com uso de sensores e voltadas paara a Internet das Coisas com o hardware Raspberry PI . Nesta etapa vamos ver dentre outras coisas: o que \u00e9 a Respberry Pi, Sistema Operacional Linux, como dar boot na placa Raspberry PI, como configurar e utilizar os GPIO - Pinos de Entrada/Saida, como realizar integra\u00e7\u00f5es e muito mais... O que vamos ver neste lab? \u00b6 Raspberry PI: o que \u00e9? Qual a diferen\u00e7a para o Arduino? Raspberry Pi: Getting Started Overview - Conhecendo o hardware Flash SD Card - Como dar boot do Sistema Operacional na Raspberry PI Modos de uso - GUI x Headless Headless - Configurando acesso SSH e rede Wifi. Headless - VNC Viewer GUI - Modo Desktop Controlando os GPIO - Blink LED. Controle por CLI Shell Script ... Raspberry PI x Arduino \u00b6 Antes de falar da Raspberry PI, vamos lembrar que o Arduino UNO, que usamos nos primeiros semestres, possui um microcontrolador de 8-bit link do datasheet . Possui uma arquitetura RISC, e cobre bem os requisitos m\u00ednimos de um sistema embarcado. Contudo, n\u00e3o \u00e9 possivel rodar um sistema operacional completo, o que pode limitar algumas possibiildades de sistemas mais complexos. Para rodar um Sistema Operacional completo precissamos de um processador por exemplo o processador Intel 386, I5, I7, Celeron e muitos outros (link do datasheet de um Intel I7) que usamos em nossos notebooks e desktops por exemplo. Em apica\u00e7\u00f5es de computa\u00e7\u00e3o embarcada geralmente usamos um computador otimizado para atender requisitos tecnicos de custo, consumo de energia, peso, tamanho dentre outros... nesses casos podemos utilizar SBC (Single Board Computer). Os computadores de placa \u00fanica (SBC) s\u00e3o computadores completos (combina\u00e7\u00e3o de um processador, mem\u00f3ria, suporte de rede, video, audio, entrada e sa\u00edda e outros...) em uma placa s\u00f3, com a vantagem de ser de baixo custo e possuir pequenas dimens\u00f5es comparado ao computador convensional. \u00c9 neste ponto que vamos come\u00e7ar a falar da Raspberry PI que \u00e9 a mais famosa e mais conhecida SBC e que suporta um Sistema Operacional Embarcado (Linux) ou seja, com ela \u00e9 possivel desenvolver e implementar uma infinidade de projetos. A placa Raspberry Pi foi lan\u00e7ada em 2012 pela Raspberry Pi Fundation, sendo uma classe de pequenos computadores port\u00e1teis de baix\u00edssimo custo, baseado nos processadores multim\u00eddia de arquitetura ARM da Broadcom, o mesmo que utilizados em celulares. O projeto foi um sucesso, vem crescendo e se atualizando, hoje temos diversos modelos para diversas aplica\u00e7\u00f5es diferentes como a Raspberry PI 3, 4, Zero e outros. link da documenta\u00e7\u00e3o oficial Link para conhecer outros modelos de SBC Agora que j\u00e1 entendemos um pouco o que \u00e9 Raspberry PI, vamos aprender a usar.... Progress Continuar... Raspbeery PI - Getting Started \u00b6 Overview \u00b6 Existem varios modelos de Raspberry PI, em nossas aulas vamos utilizar a Raspberry PI 3 Model B+ . Para complementar: Fonte de Alimenta\u00e7\u00e3o: 5V @ >2A Cart\u00e3o SD Card: micro SD Card >8GB Classe 10 ou superior Sistema Operacional \u00b6 Podemos utilizar diversas distribu\u00e7\u00f5es na RPI, dentre elas as mais comuns s\u00e3o: Raspbian - SO de uso geral Ubuntu - SO de uso geral RetroPie - Emulador de video game OSMC - Media Center Home Assistent - Automa\u00e7\u00e3o Resid\u00eancial E muitos outross... Fim da teoria, vamos pra parte pr\u00e1tica!! Leia com aten\u00e7\u00e3o este guia e siga todos os passos. Progress Continuar... Flash SD Card \u00b6 O SO (Sistema Operacional) da RPI fica armazenado no micro SD Card que deve ter pelo menos 8GB de capacidade e ser Classe 10 ou superior, existem diversas formas de realizar a grava\u00e7\u00e3o do SO (Sistema Operacional), para isso se prepare pois chegou a hora de por a m\u00e3o na massa. As diversas vers\u00f5es de SO, podem ser encontradas no link https://www.raspberrypi.com/software/operating-systems/ . Em nosso curso vamos utlizar o Raspberry Pi OS (legacy) baseado na Distribui\u00e7\u00e3o Debian 10 (Buster). Info Pra facilitar, o link para downlod j\u00e1 est\u00e1 aqui Podemos gravar o SD Card de algumas formas, a op\u00e7\u00e3o mais simples \u00e9 utilizar o Balena Etcher que roda em diversas plataformas. Para facilitar, o link para download do balena Etcher https://www.balena.io/etcher/ Exercise Agora voc\u00ea deve: - Fa\u00e7a o Download do RPI OS - Fa\u00e7a o Download do Balena Etcher - No seu notebook: - Remova o SD Card da RPI e conecte o cart\u00e3o em seu notebook - Abra o Balena Etcher e siga os passos para gravar o cart\u00e3o micro SD Card - Ap\u00f3s a grava\u00e7\u00e3o, remova o cart\u00e3o micro SD Card da USB e conecte no computador novamente. - Se tudo der certo: - Ir\u00e3o aparecer duas partici\u00e7\u00f5es referentes ao cart\u00e3o micro SD Card, sendo uma delas chamada \"boot\" - Caso contr\u00e1rio, alguma coisa deu errada, formate o SD Card em FAT32 e grave novamente. Progress Continuar... Modo de uso - Interface Gr\u00e1fica \u00b6 Apenas para conhecimento extra, pois n\u00e3o \u00e9 desta forma que vamos usar a Raspberry PI em nosso curso Para utilizar a RPI como um computador \"normal\", \u00e9 muito simples! Basta conectar na Raspberry PI: O SD Card gravado, um monitor HDMI, um teclado e um mouse. Com tudo conectado, conecte a fonte de alimenta\u00e7\u00e3o 5V e o sistema operacional ir\u00e1 inicializar :) . Modo de uso - Headless \u00b6 Agora sim! Aten\u00e7\u00e3o nos pr\u00f3ximos passos... Vamos utilizar o Rasbperry PI no modo Headless , ou seja, sem conectar monitor, teclado e mouse. Desta forma o acesso a RPI ser\u00e1 via SSH com o uso do terminal. Para abilitar este modo, \u00e9 necess\u00e1rio realizar algumas configura\u00e7\u00f5es no micro SD Card antes de dar o boot na Raspberry PI. Habilitar SSH \u00b6 Para habilitar o SSH \u00e9 necess\u00e1rio criar um arquivo vazio (sem extens\u00e3o) chamado ssh dentro da pasta boot. Exercise Agora voc\u00ea deve: - Conecte o micro SD Card no notebook - Acesse a parti\u00e7\u00e3o chamada 'boot' - crie um arquivo chamado 'ssh' na raiz da parti\u00e7\u00e3o boot - este arquivo \"n\u00e3o possui extens\u00e3o\" O resultado esperado deve ser semelhante ao da imagem abaixo: Note que o arquivo n\u00e3o possui extens\u00e3o. Progress Continuar... Configura\u00e7\u00e3o de Rede Wi-fi \u00b6 A configura\u00e7\u00e3o de rede do Wi-fi \u00e9 feita atrav\u00e9s da configura\u00e7\u00e3o do arquivo 'wpa_supplicant.conf'. Este arquivo deve ser criado dentro da pasta 'boot'. Exercise Agora voc\u00ea deve: - crie um arquivo chamado 'wpa_supplicant.conf' na raiz da parti\u00e7\u00e3o boot - abra o arquivo criado com algum editor de texto (bloco de notas ou vscode) - configure o arquivo da mesma forma que o texto abaixo Neste ponto \u00e9 importe ter uma rede wifi para se conecetar. Temos 2 op\u00e7\u00f5es de redes: Personal e Enterprise (Recomendado) - Para uma rede personal use a configura\u00e7\u00e3o abaixo. Esta configura\u00e7\u00e3o \u00e9 a mais indicada e segura para ser usada em aula, para isso rotei a internet de seu celular. Info Dica para facilitar a conex\u00e3o, utilize o seu notebook como Hotspot m\u00f3vel desta forma fica tudo mais simples para se conectar. Para isso, fa\u00e7a a seguinte configura\u00e7\u00e3o: - Selecione o bot\u00e3o ``Iniciar`` e ``Configura\u00e7\u00f5es > Rede e Internet > Hotspot m\u00f3vel``. - Em ``Compartilhar minha conex\u00e3o de Internet`` de, escolha a conex\u00e3o de Internet que voc\u00ea deseja compartilhar. - Selecione ``Editar`` > insira o nome e a senha de uma rede nova > ``Salvar``. - Ative ``Compartilhar minha conex\u00e3o de Internet com outros dispositivos``. - Para se conectar no outro dispositivo, v\u00e1 para as configura\u00e7\u00f5es de Wi-Fi no dispositivo, localize o nome da rede, selecione-o, insira a senha e conecte-se. fonte: microsoft Personal: (RECOMENDADO) - Use o roteador da sua casa ou habilite seu Celular como Roteador country = BR ctrl_interface = DIR = /var/run/wpa_supplicant GROUP = netdev update_config = 1 network ={ scan_ssid = 1 ssid = \"COLOQUE_O_NOME_DA_REDE\" psk = \"COLOQUE_A_SENHA_DA_REDE\" } * Enterprise: Redes WPA2 A rede do INSPER requer autentica\u00e7\u00e3o enterprise. Voc\u00ea vai utilizar seu usu\u00e1rio e senha. ```shell # Connect to a WPA2 Enterprise network with wpa_supplicant with this .conf file. # I used this to connect to my university's wireless network on Arch linux. # Here's the command I used: # # wpa_supplicant -i wlan0 -c ./wpa_supplicant.conf # network={ ssid=\"YOUR_SSID\" scan_ssid=1 key_mgmt=WPA-EAP identity=\"YOUR_USERNAME\" password=\"YOUR_PASSWORD\" eap=PEAP phase1=\"peaplabel=0\" phase2=\"auth=MSCHAPV2\" } ``` Configura\u00e7\u00e3o finalizada! Agora vamos ligar! Mas antess...... Progress Continuar... Boot Raspberry PI \u00b6 Para ter acesso SSH ao raspberry PI vou mostras 2 modos: vamos utilizar o software PuTTy , ou qualquer outro que abre conex\u00e3o SSH. Para facilitar, o link para download do PuTY https://www.putty.org/ Agora com tudo configurado e instalado chegou a hora de ligar e testar. O notebook e Raspberry PI devem estar na mesma rede Wifi do seu Smartphone/Roteador como indica a imagem abaixo. Vamos utilizar o o software VScode . \u00c9 bem tranquilo realizar essa conex\u00e3o, existem muitos sites que ensinam a fazer. Para facilitar, da uma olhada nos links: - [https://code.visualstudio.com/docs/remote/ssh](https://code.visualstudio.com/docs/remote/ssh) - [https://www.raspberrypi.com/news/coding-on-raspberry-pi-remotely-with-visual-studio-code/](https://www.raspberrypi.com/news/coding-on-raspberry-pi-remotely-with-visual-studio-code/) - [https://cloudbytes.dev/snippets/develop-remotely-on-raspberry-pi-using-vscode-remote-ssh](https://cloudbytes.dev/snippets/develop-remotely-on-raspberry-pi-using-vscode-remote-ssh) Exercise Agora voc\u00ea deve: - Conecte o micro SD Card na Raspberry PI - Mantenha sua rede wifi ligada (Smartphone ou roteador) - Conecte seu computador(notebook) na mesma rede Wifi configurada na Raspbeery Pi - Ligue a fonte de alimenta\u00e7\u00e3o na raspberry pi - Aguarde alguns segundos e vefifique o ip que foi atribuido ao Raspberry PI - No seu computador, escolha o motodo de acesso SSH (putty ou vscode), digite o ip da Raspberry PI e senha. - Se tudo estiver correto, um terminal ir\u00e1 abrir e vai solicitar login e senha Por padr\u00e3o, o login e senha da raspberry pi ser\u00e1: login: pi senha: raspberry Finalizado! Agora estamos com nossa RPI conectada e pronta pra uso. hello world :) \u00b6 No terminal da raspberry pi, atualize os reposit\u00f3rios: sudo apt update A parte divertida est\u00e1 no pr\u00f3ximo lab... N\u00e3o esque\u00e7a de dar uma olhada na aba DICAS para conhecer alguns projetos com a RPI.","title":"Aula1"},{"location":"aulas/lab1/#raspberry-pi","text":"Neste laborat\u00f3rio vamos come\u00e7ar nossa jornada de computa\u00e7\u00e3o embarcada com aplica\u00e7\u00f5es simples com uso de sensores e voltadas paara a Internet das Coisas com o hardware Raspberry PI . Nesta etapa vamos ver dentre outras coisas: o que \u00e9 a Respberry Pi, Sistema Operacional Linux, como dar boot na placa Raspberry PI, como configurar e utilizar os GPIO - Pinos de Entrada/Saida, como realizar integra\u00e7\u00f5es e muito mais...","title":"Raspberry PI"},{"location":"aulas/lab1/#o-que-vamos-ver-neste-lab","text":"Raspberry PI: o que \u00e9? Qual a diferen\u00e7a para o Arduino? Raspberry Pi: Getting Started Overview - Conhecendo o hardware Flash SD Card - Como dar boot do Sistema Operacional na Raspberry PI Modos de uso - GUI x Headless Headless - Configurando acesso SSH e rede Wifi. Headless - VNC Viewer GUI - Modo Desktop Controlando os GPIO - Blink LED. Controle por CLI Shell Script ...","title":"O que vamos ver neste lab?"},{"location":"aulas/lab1/#raspberry-pi-x-arduino","text":"Antes de falar da Raspberry PI, vamos lembrar que o Arduino UNO, que usamos nos primeiros semestres, possui um microcontrolador de 8-bit link do datasheet . Possui uma arquitetura RISC, e cobre bem os requisitos m\u00ednimos de um sistema embarcado. Contudo, n\u00e3o \u00e9 possivel rodar um sistema operacional completo, o que pode limitar algumas possibiildades de sistemas mais complexos. Para rodar um Sistema Operacional completo precissamos de um processador por exemplo o processador Intel 386, I5, I7, Celeron e muitos outros (link do datasheet de um Intel I7) que usamos em nossos notebooks e desktops por exemplo. Em apica\u00e7\u00f5es de computa\u00e7\u00e3o embarcada geralmente usamos um computador otimizado para atender requisitos tecnicos de custo, consumo de energia, peso, tamanho dentre outros... nesses casos podemos utilizar SBC (Single Board Computer). Os computadores de placa \u00fanica (SBC) s\u00e3o computadores completos (combina\u00e7\u00e3o de um processador, mem\u00f3ria, suporte de rede, video, audio, entrada e sa\u00edda e outros...) em uma placa s\u00f3, com a vantagem de ser de baixo custo e possuir pequenas dimens\u00f5es comparado ao computador convensional. \u00c9 neste ponto que vamos come\u00e7ar a falar da Raspberry PI que \u00e9 a mais famosa e mais conhecida SBC e que suporta um Sistema Operacional Embarcado (Linux) ou seja, com ela \u00e9 possivel desenvolver e implementar uma infinidade de projetos. A placa Raspberry Pi foi lan\u00e7ada em 2012 pela Raspberry Pi Fundation, sendo uma classe de pequenos computadores port\u00e1teis de baix\u00edssimo custo, baseado nos processadores multim\u00eddia de arquitetura ARM da Broadcom, o mesmo que utilizados em celulares. O projeto foi um sucesso, vem crescendo e se atualizando, hoje temos diversos modelos para diversas aplica\u00e7\u00f5es diferentes como a Raspberry PI 3, 4, Zero e outros. link da documenta\u00e7\u00e3o oficial Link para conhecer outros modelos de SBC Agora que j\u00e1 entendemos um pouco o que \u00e9 Raspberry PI, vamos aprender a usar.... Progress Continuar...","title":"Raspberry PI x Arduino"},{"location":"aulas/lab1/#raspbeery-pi-getting-started","text":"","title":"Raspbeery PI - Getting Started"},{"location":"aulas/lab1/#overview","text":"Existem varios modelos de Raspberry PI, em nossas aulas vamos utilizar a Raspberry PI 3 Model B+ . Para complementar: Fonte de Alimenta\u00e7\u00e3o: 5V @ >2A Cart\u00e3o SD Card: micro SD Card >8GB Classe 10 ou superior","title":"Overview"},{"location":"aulas/lab1/#sistema-operacional","text":"Podemos utilizar diversas distribu\u00e7\u00f5es na RPI, dentre elas as mais comuns s\u00e3o: Raspbian - SO de uso geral Ubuntu - SO de uso geral RetroPie - Emulador de video game OSMC - Media Center Home Assistent - Automa\u00e7\u00e3o Resid\u00eancial E muitos outross... Fim da teoria, vamos pra parte pr\u00e1tica!! Leia com aten\u00e7\u00e3o este guia e siga todos os passos. Progress Continuar...","title":"Sistema Operacional"},{"location":"aulas/lab1/#flash-sd-card","text":"O SO (Sistema Operacional) da RPI fica armazenado no micro SD Card que deve ter pelo menos 8GB de capacidade e ser Classe 10 ou superior, existem diversas formas de realizar a grava\u00e7\u00e3o do SO (Sistema Operacional), para isso se prepare pois chegou a hora de por a m\u00e3o na massa. As diversas vers\u00f5es de SO, podem ser encontradas no link https://www.raspberrypi.com/software/operating-systems/ . Em nosso curso vamos utlizar o Raspberry Pi OS (legacy) baseado na Distribui\u00e7\u00e3o Debian 10 (Buster). Info Pra facilitar, o link para downlod j\u00e1 est\u00e1 aqui Podemos gravar o SD Card de algumas formas, a op\u00e7\u00e3o mais simples \u00e9 utilizar o Balena Etcher que roda em diversas plataformas. Para facilitar, o link para download do balena Etcher https://www.balena.io/etcher/ Exercise Agora voc\u00ea deve: - Fa\u00e7a o Download do RPI OS - Fa\u00e7a o Download do Balena Etcher - No seu notebook: - Remova o SD Card da RPI e conecte o cart\u00e3o em seu notebook - Abra o Balena Etcher e siga os passos para gravar o cart\u00e3o micro SD Card - Ap\u00f3s a grava\u00e7\u00e3o, remova o cart\u00e3o micro SD Card da USB e conecte no computador novamente. - Se tudo der certo: - Ir\u00e3o aparecer duas partici\u00e7\u00f5es referentes ao cart\u00e3o micro SD Card, sendo uma delas chamada \"boot\" - Caso contr\u00e1rio, alguma coisa deu errada, formate o SD Card em FAT32 e grave novamente. Progress Continuar...","title":"Flash SD Card"},{"location":"aulas/lab1/#modo-de-uso-interface-grafica","text":"Apenas para conhecimento extra, pois n\u00e3o \u00e9 desta forma que vamos usar a Raspberry PI em nosso curso Para utilizar a RPI como um computador \"normal\", \u00e9 muito simples! Basta conectar na Raspberry PI: O SD Card gravado, um monitor HDMI, um teclado e um mouse. Com tudo conectado, conecte a fonte de alimenta\u00e7\u00e3o 5V e o sistema operacional ir\u00e1 inicializar :) .","title":"Modo de uso - Interface Gr\u00e1fica"},{"location":"aulas/lab1/#modo-de-uso-headless","text":"Agora sim! Aten\u00e7\u00e3o nos pr\u00f3ximos passos... Vamos utilizar o Rasbperry PI no modo Headless , ou seja, sem conectar monitor, teclado e mouse. Desta forma o acesso a RPI ser\u00e1 via SSH com o uso do terminal. Para abilitar este modo, \u00e9 necess\u00e1rio realizar algumas configura\u00e7\u00f5es no micro SD Card antes de dar o boot na Raspberry PI.","title":"Modo de uso - Headless"},{"location":"aulas/lab1/#habilitar-ssh","text":"Para habilitar o SSH \u00e9 necess\u00e1rio criar um arquivo vazio (sem extens\u00e3o) chamado ssh dentro da pasta boot. Exercise Agora voc\u00ea deve: - Conecte o micro SD Card no notebook - Acesse a parti\u00e7\u00e3o chamada 'boot' - crie um arquivo chamado 'ssh' na raiz da parti\u00e7\u00e3o boot - este arquivo \"n\u00e3o possui extens\u00e3o\" O resultado esperado deve ser semelhante ao da imagem abaixo: Note que o arquivo n\u00e3o possui extens\u00e3o. Progress Continuar...","title":"Habilitar SSH"},{"location":"aulas/lab1/#configuracao-de-rede-wi-fi","text":"A configura\u00e7\u00e3o de rede do Wi-fi \u00e9 feita atrav\u00e9s da configura\u00e7\u00e3o do arquivo 'wpa_supplicant.conf'. Este arquivo deve ser criado dentro da pasta 'boot'. Exercise Agora voc\u00ea deve: - crie um arquivo chamado 'wpa_supplicant.conf' na raiz da parti\u00e7\u00e3o boot - abra o arquivo criado com algum editor de texto (bloco de notas ou vscode) - configure o arquivo da mesma forma que o texto abaixo Neste ponto \u00e9 importe ter uma rede wifi para se conecetar. Temos 2 op\u00e7\u00f5es de redes: Personal e Enterprise (Recomendado) - Para uma rede personal use a configura\u00e7\u00e3o abaixo. Esta configura\u00e7\u00e3o \u00e9 a mais indicada e segura para ser usada em aula, para isso rotei a internet de seu celular. Info Dica para facilitar a conex\u00e3o, utilize o seu notebook como Hotspot m\u00f3vel desta forma fica tudo mais simples para se conectar. Para isso, fa\u00e7a a seguinte configura\u00e7\u00e3o: - Selecione o bot\u00e3o ``Iniciar`` e ``Configura\u00e7\u00f5es > Rede e Internet > Hotspot m\u00f3vel``. - Em ``Compartilhar minha conex\u00e3o de Internet`` de, escolha a conex\u00e3o de Internet que voc\u00ea deseja compartilhar. - Selecione ``Editar`` > insira o nome e a senha de uma rede nova > ``Salvar``. - Ative ``Compartilhar minha conex\u00e3o de Internet com outros dispositivos``. - Para se conectar no outro dispositivo, v\u00e1 para as configura\u00e7\u00f5es de Wi-Fi no dispositivo, localize o nome da rede, selecione-o, insira a senha e conecte-se. fonte: microsoft Personal: (RECOMENDADO) - Use o roteador da sua casa ou habilite seu Celular como Roteador country = BR ctrl_interface = DIR = /var/run/wpa_supplicant GROUP = netdev update_config = 1 network ={ scan_ssid = 1 ssid = \"COLOQUE_O_NOME_DA_REDE\" psk = \"COLOQUE_A_SENHA_DA_REDE\" } * Enterprise: Redes WPA2 A rede do INSPER requer autentica\u00e7\u00e3o enterprise. Voc\u00ea vai utilizar seu usu\u00e1rio e senha. ```shell # Connect to a WPA2 Enterprise network with wpa_supplicant with this .conf file. # I used this to connect to my university's wireless network on Arch linux. # Here's the command I used: # # wpa_supplicant -i wlan0 -c ./wpa_supplicant.conf # network={ ssid=\"YOUR_SSID\" scan_ssid=1 key_mgmt=WPA-EAP identity=\"YOUR_USERNAME\" password=\"YOUR_PASSWORD\" eap=PEAP phase1=\"peaplabel=0\" phase2=\"auth=MSCHAPV2\" } ``` Configura\u00e7\u00e3o finalizada! Agora vamos ligar! Mas antess...... Progress Continuar...","title":"Configura\u00e7\u00e3o de Rede Wi-fi"},{"location":"aulas/lab1/#boot-raspberry-pi","text":"Para ter acesso SSH ao raspberry PI vou mostras 2 modos: vamos utilizar o software PuTTy , ou qualquer outro que abre conex\u00e3o SSH. Para facilitar, o link para download do PuTY https://www.putty.org/ Agora com tudo configurado e instalado chegou a hora de ligar e testar. O notebook e Raspberry PI devem estar na mesma rede Wifi do seu Smartphone/Roteador como indica a imagem abaixo. Vamos utilizar o o software VScode . \u00c9 bem tranquilo realizar essa conex\u00e3o, existem muitos sites que ensinam a fazer. Para facilitar, da uma olhada nos links: - [https://code.visualstudio.com/docs/remote/ssh](https://code.visualstudio.com/docs/remote/ssh) - [https://www.raspberrypi.com/news/coding-on-raspberry-pi-remotely-with-visual-studio-code/](https://www.raspberrypi.com/news/coding-on-raspberry-pi-remotely-with-visual-studio-code/) - [https://cloudbytes.dev/snippets/develop-remotely-on-raspberry-pi-using-vscode-remote-ssh](https://cloudbytes.dev/snippets/develop-remotely-on-raspberry-pi-using-vscode-remote-ssh) Exercise Agora voc\u00ea deve: - Conecte o micro SD Card na Raspberry PI - Mantenha sua rede wifi ligada (Smartphone ou roteador) - Conecte seu computador(notebook) na mesma rede Wifi configurada na Raspbeery Pi - Ligue a fonte de alimenta\u00e7\u00e3o na raspberry pi - Aguarde alguns segundos e vefifique o ip que foi atribuido ao Raspberry PI - No seu computador, escolha o motodo de acesso SSH (putty ou vscode), digite o ip da Raspberry PI e senha. - Se tudo estiver correto, um terminal ir\u00e1 abrir e vai solicitar login e senha Por padr\u00e3o, o login e senha da raspberry pi ser\u00e1: login: pi senha: raspberry Finalizado! Agora estamos com nossa RPI conectada e pronta pra uso.","title":"Boot Raspberry PI"},{"location":"aulas/lab1/#hello-world","text":"No terminal da raspberry pi, atualize os reposit\u00f3rios: sudo apt update A parte divertida est\u00e1 no pr\u00f3ximo lab... N\u00e3o esque\u00e7a de dar uma olhada na aba DICAS para conhecer alguns projetos com a RPI.","title":"hello world :)"},{"location":"aulas/lab2/","text":"O que vamos ver neste lab? \u00b6 Raspberry Pi: Conhecendo os pinos Usando a biblioteca RPI.GPIO Montando um Webserver em Flask Progress Continuar... Conhecendo os pinos da Raspberry Pi \u00b6 Podemos utilizar a Raspberry Pi para conectar sensores e atuadores, de forma semelhante como foi feito utilizando o Arduino, para isso utilizamos os barramento de pinos da Raspberry Pi chamado de GPIO (General Purpose Input Output). Ao todo s\u00e3o 40 pinos (para RPI 2 ou superior) e de forma geral, cada pino possui uma fun\u00e7\u00e3o ou caracteristica especifica. Warning Cuidado: Devemos ter aten\u00e7\u00e3o para n\u00e3o conectar os perifericos na placa de forma incorreta. Existe o risco de queimar a Raspberry Pi. A imagem abaixo \u00e9 um guia simples para cada pino. Parece complicado na primeira vez, mas \u00e9 tranquilo. Vamos conhecer o que \u00e9 cada pino: - Pinos de Alimenta\u00e7\u00e3o: - 3.3V (ao todo 2 pinos) - 5V (ao todo 2 pinos) - GND/Ground/0V (ao todo 8 pinos) - Pinos de interface: - GPIO (General purpose input and output): S\u00e3o os pinos de entrada/saida. A tens\u00e3o de saida \u00e9 de 3.3V. - I2C/SPI/UART: Protocolos de comunica\u00e7\u00e3o especificos utilizados para realizar a interface m\u00f3dulos epecificos com a Raspberry Pi. Warning Aten\u00e7\u00e3o: Observe a correla\u00e7\u00e3o dos pinos para n\u00e3o ligar invertido. Exercise Quantos pinos GPIO est\u00e3o disponiveis, ou seja, que podem ser utilizados? Progress Continuar... Configurando os GPIOs \u00b6 Vamos utilizara biblioteca RPI.GPIO , que permite de forma simples, configurar e usar os GPIOs com scripts em Python, vamos preparar o nosso ambiente de desenvolvimento: Exercise Inicialize a Raspberry Pi. (modo Desktop ou SSH). Se tiver d\u00favida de como fazer, volte para o anterior. Abra o terminal da raspberry pi. Certifique-se de estar com acesso a internet. No terminal da raspberry pi, atualize os reposit\u00f3rios: sudo apt update Em seguida, tente instalar o pacote RPi.GPIO: A documenta\u00e7\u00e3o da biblioteca est\u00e1 disponivel no aqui . sudo apt install rpi.gpio Se ainda n\u00e3o estiver instalado, ser\u00e1 instalado. Se j\u00e1 estiver instalado, ser\u00e1 atualizado se uma vers\u00e3o mais recente estiver dispon\u00edvel. Progress Continuar... Conhecendo a biblioteca RPi.GPIO \u00b6 A RPi.GPIO \u00e9 uma biblioteca simples e vamos ver as principais fun\u00e7\u00f5es atrav\u00e9s do c\u00f3digo de exemplo abaixo: GPIO.setmode() = Define o modo de acesso aos pino da raspberry pi, existem 2 modos de definir a mesma coisa: GPIO.BOARD = Posi\u00e7\u00e3o f\u00edsica do pino na raspberry pi GPIO.BCM = Numero ap\u00f3s GPIOxx exemplo: BOARD 11 = GPIO17 GPIO.setup() = Define a fun\u00e7\u00e3o do pino, entrada (GPIO.IN) ou saida (GPIO.OUT) GPIO.output() = Define o estado do pino definido como saida em nivel logico baixo (GPIO.LOW) ou alto (GPIO.HIGH) GPIO.input() = Faz a leitura do estado do pino definido como entrada. Geralmente quando usamos um pino como entrada configuramos no setup o parametro pull_up_down (como exemplo: GPIO.setup(18, GPIO.IN, pull_up_down=GPIO.PUD_UP)) Info O exercicio pode ser realizado utilizando o VScode, \u00e9 uma interface uma pouco mais amig\u00e1ve. Neste caso, n\u00e3o ser\u00e1 necess\u00e1rio o editor nano. Exercise Monte o circuito abaixo: No terminal da RPI, digite: cd ~ mkdir src cd src touch blinkled.py Acabamos de criar um diretorio chamado src e um arquivo python chamado blinkled.py Vamos abrir o arquivo blinkled.py e escrever o c\u00f3digo abaixo. Para abrir o arquivo digite: nano blinkled.py Ap\u00f3s digitar o c\u00f3digo python, salve e feche o arquivo: Ctlr+S >>> Ctlr+X Vamos rodar nosso c\u00f3digo python, no terminal digite: python blinkled.py Se tudo deu certo, o led est\u00e1 piscando. :) para interromper o c\u00f3digo, aperte Ctrl+C. Warning Os 2 c\u00f3digos realizam a mesma fun\u00e7\u00e3o, a diferen\u00e7a est\u00e1 apenas no setmode . Escolha um dos c\u00f3digos para testar. import RPi.GPIO as GPIO ### import da biblioteca gpio import time # usando o a posi\u00e7\u00e3o fis\u00edca do pino na raspberry pi GPIO . setmode ( GPIO . BOARD ) # configura o pino fisico 11 como saida GPIO . setup ( 11 , GPIO . OUT ) while True : # escreve no pino 11 nivel logico alto GPIO . output ( 11 , GPIO . HIGH ) time . sleep ( 1 ) # delay de 1s # escreve no pino 11 nivel logico baixo GPIO . output ( 11 , GPIO . LOW ) time . sleep ( 1 ) # delay de 1s GPIO . cleanup () # Limpa configura\u00e7\u00e3o finaliza o programa import RPi.GPIO as GPIO ### import da biblioteca gpio # usando o numero ap\u00f3s GPIOxx da raspberry pi GPIO . setmode ( GPIO . BCM ) # configura o GPIO17 como saida GPIO . setup ( 17 , GPIO . OUT ) while True : # escreve no GPIO17 nivel logico alto GPIO . output ( 17 , GPIO . HIGH ) time . sleep ( 1 ) # delay de 1s # escreve no GPIO17 nivel logico baixo GPIO . output ( 17 , GPIO . LOW ) time . sleep ( 1 ) # delay de 1s GPIO . cleanup () # Limpa configura\u00e7\u00e3o finaliza o programa Agora que j\u00e1 entendemos a estrutura b\u00e1sica do script python, vamos praticar com o Desafio: Exercise Desenvolva um Sensor de estacionamento veicular. A id\u00e9ia \u00e9 simples. Vamos utilizar 1 sensor de dist\u00e2ncia ultrass\u00f4nico e 3 leds de cores difenciadas. Parte do problema j\u00e1 est\u00e1 resolvido voc\u00ea pode acessar o tutorial adaptar o c\u00f3digo do Sensor HC-SR04 e implementar a logica dos led. Progress Continuar... Enviando avisos para o celular por SMS \u00b6 Exercise Altere o seu c\u00f3digo do sensor de enstacionamento e implemente uma fun\u00e7\u00e3o que envia um SMS para numero do seu celular quando a dist\u00e2ncia do sensor ultrassonico estiver abaixo de 10cm. Para ajudar siga os passos deste tutorial: send-sms-from-raspberry-pi-python Progress Continuar... Montando um Webserver em Flask \u00b6 Vamos montar um webserver na raspberry pi com flask. A ideia deste exemplo \u00e9 controlar por um navegador web o status de um led entre ligado e desligado: Instalando o Flask e configurando o ambiente \u00b6 No terminal da raspberry pi, atualize os reposit\u00f3rios: sudo apt update Instale os pacotes do flask sudo apt-get install python3-flask Agora vamos criar nossa arvore de projeto: - webserver - static - index.css - templates - index.html - app.py No terminal da raspberry pi, digite: cd ~ mkdir webserver cd webserver mkdir static templates ls Vamos criar o app.py . No terminal da raspberry pi, digite: nano app.py Com o editor nano aberto digite: ''' Arnaldo Viana ''' import RPi.GPIO as GPIO from flask import Flask , render_template , request app = Flask ( __name__ ) GPIO . setmode ( GPIO . BCM ) GPIO . setwarnings ( False ) #define actuators GPIOs ledRed = 2 #initialize GPIO status variables ledRedSts = 0 # Define led pins as output GPIO . setup ( ledRed , GPIO . OUT ) # turn leds OFF GPIO . output ( ledRed , GPIO . LOW ) @app . route ( \"/\" ) def index (): # Read GPIO Status ledRedSts = GPIO . input ( ledRed ) templateData = { 'ledRed' : ledRedSts , } return render_template ( 'index.html' , ** templateData ) @app . route ( \"/<deviceName>/<action>\" ) def action ( deviceName , action ): if deviceName == 'ledRed' : actuator = ledRed if action == \"on\" : GPIO . output ( actuator , GPIO . HIGH ) if action == \"off\" : GPIO . output ( actuator , GPIO . LOW ) ledRedSts = GPIO . input ( ledRed ) templateData = { 'ledRed' : ledRedSts , } return render_template ( 'index.html' , ** templateData ) if __name__ == \"__main__\" : app . run ( host = '0.0.0.0' , port = 80 , debug = True ) show! Salve e feche o editor nano. Ctrl+X >> Y Vamos criar a pagina html index.html . No terminal da raspberry pi, digite: cd templates nano index.html Com o editor nano aberto digite: <!DOCTYPE html> < head > < title > Webserver </ title > < link rel = \"stylesheet\" href = '../static/index.css' /> </ head > < body > < h2 > Controle LED </ h2 > < h3 > RED LED ==> {{ ledRed }} ==> {% if ledRed == 1 %} < a href = \"/ledRed/off\" class = \"button\" > TURN OFF </ a > {% else %} < a href = \"/ledRed/on\" class = \"button\" > TURN ON </ a > {% endif %} </ h3 > </ body > </ html > show! Salve e feche o editor nano. Ctrl+X >> Y Vamos criar o arquivo de estilo css index.css . No terminal da raspberry pi, digite: cd .. cd static nano index.html Com o editor nano aberto digite: body { background : blue ; color : yellow ; } . button { font : bold 15 px Arial ; text-decoration : none ; background-color : #EEEEEE ; color : #333333 ; padding : 2 px 6 px 2 px 6 px ; border-collapse : separete ; border-spacing : 0 ; border-top : 1 px solid #CCCCCC ; border-right : 1 px solid #333333 ; border-bottom : 1 px solid #333333 ; border-left : 1 px solid #CCCCCC ; } show! Salve e feche o editor nano. Ctrl+X >> Y Hora de testar \u00b6 Vamos testar nosso webserver simples. No terminal da raspberry pi, digite: cd .. sudo python app.py Deixe o flask rodando na raspberry e no computador ou no smartphone (Deve estar na mesma rede da raspberry), abra o navegador web e digite o ip da raspberry pi. O resultado esperado \u00e9 abrir uma pagina web e controlar o led. Exercise Compreenda o c\u00f3digo app.py e monte o circuito adequado para conseguir visualizar o led acender e apagar. Exercise Altere o c\u00f3digo app.py e adicione mais 2 led e 2 bot\u00f5es (totalizando 3 leds, 2 bot\u00f5es), lembre-se de adaptar os arquivos HTML para exibir no frontend os status. Exercise Aproveite os seus conhecimentos web e proponha melhorias de UI/UX para o exercicio anterior.","title":"Aula2"},{"location":"aulas/lab2/#o-que-vamos-ver-neste-lab","text":"Raspberry Pi: Conhecendo os pinos Usando a biblioteca RPI.GPIO Montando um Webserver em Flask Progress Continuar...","title":"O que vamos ver neste lab?"},{"location":"aulas/lab2/#conhecendo-os-pinos-da-raspberry-pi","text":"Podemos utilizar a Raspberry Pi para conectar sensores e atuadores, de forma semelhante como foi feito utilizando o Arduino, para isso utilizamos os barramento de pinos da Raspberry Pi chamado de GPIO (General Purpose Input Output). Ao todo s\u00e3o 40 pinos (para RPI 2 ou superior) e de forma geral, cada pino possui uma fun\u00e7\u00e3o ou caracteristica especifica. Warning Cuidado: Devemos ter aten\u00e7\u00e3o para n\u00e3o conectar os perifericos na placa de forma incorreta. Existe o risco de queimar a Raspberry Pi. A imagem abaixo \u00e9 um guia simples para cada pino. Parece complicado na primeira vez, mas \u00e9 tranquilo. Vamos conhecer o que \u00e9 cada pino: - Pinos de Alimenta\u00e7\u00e3o: - 3.3V (ao todo 2 pinos) - 5V (ao todo 2 pinos) - GND/Ground/0V (ao todo 8 pinos) - Pinos de interface: - GPIO (General purpose input and output): S\u00e3o os pinos de entrada/saida. A tens\u00e3o de saida \u00e9 de 3.3V. - I2C/SPI/UART: Protocolos de comunica\u00e7\u00e3o especificos utilizados para realizar a interface m\u00f3dulos epecificos com a Raspberry Pi. Warning Aten\u00e7\u00e3o: Observe a correla\u00e7\u00e3o dos pinos para n\u00e3o ligar invertido. Exercise Quantos pinos GPIO est\u00e3o disponiveis, ou seja, que podem ser utilizados? Progress Continuar...","title":"Conhecendo os pinos da Raspberry Pi"},{"location":"aulas/lab2/#configurando-os-gpios","text":"Vamos utilizara biblioteca RPI.GPIO , que permite de forma simples, configurar e usar os GPIOs com scripts em Python, vamos preparar o nosso ambiente de desenvolvimento: Exercise Inicialize a Raspberry Pi. (modo Desktop ou SSH). Se tiver d\u00favida de como fazer, volte para o anterior. Abra o terminal da raspberry pi. Certifique-se de estar com acesso a internet. No terminal da raspberry pi, atualize os reposit\u00f3rios: sudo apt update Em seguida, tente instalar o pacote RPi.GPIO: A documenta\u00e7\u00e3o da biblioteca est\u00e1 disponivel no aqui . sudo apt install rpi.gpio Se ainda n\u00e3o estiver instalado, ser\u00e1 instalado. Se j\u00e1 estiver instalado, ser\u00e1 atualizado se uma vers\u00e3o mais recente estiver dispon\u00edvel. Progress Continuar...","title":"Configurando os GPIOs"},{"location":"aulas/lab2/#conhecendo-a-biblioteca-rpigpio","text":"A RPi.GPIO \u00e9 uma biblioteca simples e vamos ver as principais fun\u00e7\u00f5es atrav\u00e9s do c\u00f3digo de exemplo abaixo: GPIO.setmode() = Define o modo de acesso aos pino da raspberry pi, existem 2 modos de definir a mesma coisa: GPIO.BOARD = Posi\u00e7\u00e3o f\u00edsica do pino na raspberry pi GPIO.BCM = Numero ap\u00f3s GPIOxx exemplo: BOARD 11 = GPIO17 GPIO.setup() = Define a fun\u00e7\u00e3o do pino, entrada (GPIO.IN) ou saida (GPIO.OUT) GPIO.output() = Define o estado do pino definido como saida em nivel logico baixo (GPIO.LOW) ou alto (GPIO.HIGH) GPIO.input() = Faz a leitura do estado do pino definido como entrada. Geralmente quando usamos um pino como entrada configuramos no setup o parametro pull_up_down (como exemplo: GPIO.setup(18, GPIO.IN, pull_up_down=GPIO.PUD_UP)) Info O exercicio pode ser realizado utilizando o VScode, \u00e9 uma interface uma pouco mais amig\u00e1ve. Neste caso, n\u00e3o ser\u00e1 necess\u00e1rio o editor nano. Exercise Monte o circuito abaixo: No terminal da RPI, digite: cd ~ mkdir src cd src touch blinkled.py Acabamos de criar um diretorio chamado src e um arquivo python chamado blinkled.py Vamos abrir o arquivo blinkled.py e escrever o c\u00f3digo abaixo. Para abrir o arquivo digite: nano blinkled.py Ap\u00f3s digitar o c\u00f3digo python, salve e feche o arquivo: Ctlr+S >>> Ctlr+X Vamos rodar nosso c\u00f3digo python, no terminal digite: python blinkled.py Se tudo deu certo, o led est\u00e1 piscando. :) para interromper o c\u00f3digo, aperte Ctrl+C. Warning Os 2 c\u00f3digos realizam a mesma fun\u00e7\u00e3o, a diferen\u00e7a est\u00e1 apenas no setmode . Escolha um dos c\u00f3digos para testar. import RPi.GPIO as GPIO ### import da biblioteca gpio import time # usando o a posi\u00e7\u00e3o fis\u00edca do pino na raspberry pi GPIO . setmode ( GPIO . BOARD ) # configura o pino fisico 11 como saida GPIO . setup ( 11 , GPIO . OUT ) while True : # escreve no pino 11 nivel logico alto GPIO . output ( 11 , GPIO . HIGH ) time . sleep ( 1 ) # delay de 1s # escreve no pino 11 nivel logico baixo GPIO . output ( 11 , GPIO . LOW ) time . sleep ( 1 ) # delay de 1s GPIO . cleanup () # Limpa configura\u00e7\u00e3o finaliza o programa import RPi.GPIO as GPIO ### import da biblioteca gpio # usando o numero ap\u00f3s GPIOxx da raspberry pi GPIO . setmode ( GPIO . BCM ) # configura o GPIO17 como saida GPIO . setup ( 17 , GPIO . OUT ) while True : # escreve no GPIO17 nivel logico alto GPIO . output ( 17 , GPIO . HIGH ) time . sleep ( 1 ) # delay de 1s # escreve no GPIO17 nivel logico baixo GPIO . output ( 17 , GPIO . LOW ) time . sleep ( 1 ) # delay de 1s GPIO . cleanup () # Limpa configura\u00e7\u00e3o finaliza o programa Agora que j\u00e1 entendemos a estrutura b\u00e1sica do script python, vamos praticar com o Desafio: Exercise Desenvolva um Sensor de estacionamento veicular. A id\u00e9ia \u00e9 simples. Vamos utilizar 1 sensor de dist\u00e2ncia ultrass\u00f4nico e 3 leds de cores difenciadas. Parte do problema j\u00e1 est\u00e1 resolvido voc\u00ea pode acessar o tutorial adaptar o c\u00f3digo do Sensor HC-SR04 e implementar a logica dos led. Progress Continuar...","title":"Conhecendo a biblioteca RPi.GPIO"},{"location":"aulas/lab2/#enviando-avisos-para-o-celular-por-sms","text":"Exercise Altere o seu c\u00f3digo do sensor de enstacionamento e implemente uma fun\u00e7\u00e3o que envia um SMS para numero do seu celular quando a dist\u00e2ncia do sensor ultrassonico estiver abaixo de 10cm. Para ajudar siga os passos deste tutorial: send-sms-from-raspberry-pi-python Progress Continuar...","title":"Enviando avisos para o celular por SMS"},{"location":"aulas/lab2/#montando-um-webserver-em-flask","text":"Vamos montar um webserver na raspberry pi com flask. A ideia deste exemplo \u00e9 controlar por um navegador web o status de um led entre ligado e desligado:","title":"Montando um Webserver em Flask"},{"location":"aulas/lab2/#instalando-o-flask-e-configurando-o-ambiente","text":"No terminal da raspberry pi, atualize os reposit\u00f3rios: sudo apt update Instale os pacotes do flask sudo apt-get install python3-flask Agora vamos criar nossa arvore de projeto: - webserver - static - index.css - templates - index.html - app.py No terminal da raspberry pi, digite: cd ~ mkdir webserver cd webserver mkdir static templates ls Vamos criar o app.py . No terminal da raspberry pi, digite: nano app.py Com o editor nano aberto digite: ''' Arnaldo Viana ''' import RPi.GPIO as GPIO from flask import Flask , render_template , request app = Flask ( __name__ ) GPIO . setmode ( GPIO . BCM ) GPIO . setwarnings ( False ) #define actuators GPIOs ledRed = 2 #initialize GPIO status variables ledRedSts = 0 # Define led pins as output GPIO . setup ( ledRed , GPIO . OUT ) # turn leds OFF GPIO . output ( ledRed , GPIO . LOW ) @app . route ( \"/\" ) def index (): # Read GPIO Status ledRedSts = GPIO . input ( ledRed ) templateData = { 'ledRed' : ledRedSts , } return render_template ( 'index.html' , ** templateData ) @app . route ( \"/<deviceName>/<action>\" ) def action ( deviceName , action ): if deviceName == 'ledRed' : actuator = ledRed if action == \"on\" : GPIO . output ( actuator , GPIO . HIGH ) if action == \"off\" : GPIO . output ( actuator , GPIO . LOW ) ledRedSts = GPIO . input ( ledRed ) templateData = { 'ledRed' : ledRedSts , } return render_template ( 'index.html' , ** templateData ) if __name__ == \"__main__\" : app . run ( host = '0.0.0.0' , port = 80 , debug = True ) show! Salve e feche o editor nano. Ctrl+X >> Y Vamos criar a pagina html index.html . No terminal da raspberry pi, digite: cd templates nano index.html Com o editor nano aberto digite: <!DOCTYPE html> < head > < title > Webserver </ title > < link rel = \"stylesheet\" href = '../static/index.css' /> </ head > < body > < h2 > Controle LED </ h2 > < h3 > RED LED ==> {{ ledRed }} ==> {% if ledRed == 1 %} < a href = \"/ledRed/off\" class = \"button\" > TURN OFF </ a > {% else %} < a href = \"/ledRed/on\" class = \"button\" > TURN ON </ a > {% endif %} </ h3 > </ body > </ html > show! Salve e feche o editor nano. Ctrl+X >> Y Vamos criar o arquivo de estilo css index.css . No terminal da raspberry pi, digite: cd .. cd static nano index.html Com o editor nano aberto digite: body { background : blue ; color : yellow ; } . button { font : bold 15 px Arial ; text-decoration : none ; background-color : #EEEEEE ; color : #333333 ; padding : 2 px 6 px 2 px 6 px ; border-collapse : separete ; border-spacing : 0 ; border-top : 1 px solid #CCCCCC ; border-right : 1 px solid #333333 ; border-bottom : 1 px solid #333333 ; border-left : 1 px solid #CCCCCC ; } show! Salve e feche o editor nano. Ctrl+X >> Y","title":"Instalando o Flask e configurando o ambiente"},{"location":"aulas/lab2/#hora-de-testar","text":"Vamos testar nosso webserver simples. No terminal da raspberry pi, digite: cd .. sudo python app.py Deixe o flask rodando na raspberry e no computador ou no smartphone (Deve estar na mesma rede da raspberry), abra o navegador web e digite o ip da raspberry pi. O resultado esperado \u00e9 abrir uma pagina web e controlar o led. Exercise Compreenda o c\u00f3digo app.py e monte o circuito adequado para conseguir visualizar o led acender e apagar. Exercise Altere o c\u00f3digo app.py e adicione mais 2 led e 2 bot\u00f5es (totalizando 3 leds, 2 bot\u00f5es), lembre-se de adaptar os arquivos HTML para exibir no frontend os status. Exercise Aproveite os seus conhecimentos web e proponha melhorias de UI/UX para o exercicio anterior.","title":"Hora de testar"},{"location":"aulas/lab3/","text":"O que vamos ver neste lab? \u00b6 Nvidia Jetson Nano: O que \u00e9 isso? Como dar boot Vis\u00e3o computacional na Jetson Nano Progress Continuar... Afinal, o que \u00e9 Jetson Nano? \u00b6 Basicamente, o NVIDIA Jetson Nano Developer Kit \u00e9 uma SBC que fornece uma solu\u00e7\u00e3o de computa\u00e7\u00e3o completa (com GPU integrada), logo pode ser utilizada para desenvolver/prototipar solu\u00e7\u00f5es em diversas areas. Assim como a Raspberry Pi, temos um SO completo e acesso a perifericos e GPIO. Para quem gosta de hardware, abaixo temos algumas informa\u00e7\u00f5es comparando a especifica\u00e7\u00f5es da Jetson Nano com oa Raspberry Pi. Exercise Compare as espec. dos dois SBC. Quais as maiores diferen\u00e7as encontradas? Em uma an\u00e1lise r\u00e1pida, podemos ver que as duas specs s\u00e3o parecidas, com exce\u00e7\u00e3o de um. A maior diferen\u00e7a nos recursos de computa\u00e7\u00e3o e gr\u00e1ficos entre essas duas placas \u00e9 que o NVIDIA Jetson Nano inclui uma GPU (processador gr\u00e1fico) de maior desempenho e capacidade, enquanto o Raspberry Pi 4 possui uma GPU multim\u00eddia integrada de baixo consumo de energia. Info Se voc\u00ea gosta de video game, provavelmente conhece o Nintendo Switch. O hardware do Switch \u00e9 bem similar a Jetson Nano pois a GPU NVIDIA Maxwell com 128 n\u00facleos CUDA do Jetson Nano \u00e9 na verdade a mesma GPU encontrada no Nintendo Switch. A CPU Cortex-A57 tamb\u00e9m \u00e9 a mesma. A diferen\u00e7a \u00e9 que o Nintendo Switch possui quatro n\u00facleos Cortex-A53 adicionais em seu hardware NVIDIA Tegra X1 SoC (System on a Chip). Progress Continuar... A NVIDIA possui uma documenta\u00e7\u00e3o oficial bem completa e detalhada desde setup e os primeiros passos at\u00e9 suporte para aspectos avan\u00e7ados com a Jetson Nano. Calma!!! nas primeiras itera\u00e7\u00f5es com a documenta\u00e7\u00e3o, sites e foruns \u00e9 normal ter um pouco de confus\u00e3o e n\u00e3o encontrar as respostas desejadas, mas com um pouco de pr\u00e1tica (e paci\u00eancia...) fica f\u00e1cil. Desta forma, bora navegar nesse oceano de informa\u00e7\u00f5es da NVIDIA. Como dar boot??? \u00b6 Exercise No seu notebook, acesse o site https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#intro e siga o passo-a-passo para realizar o boot da Jetson Nano. Info Embora sej\u00e1 uma etapa simples, o download pode demorar bastante, por esse motivo, vamos pular essa parte. Na teoria, as Jetson Nano j\u00e1 est\u00e1o com o boot feito. Progress Continuar... HELLO WORLD! Ligando a placa... \u00b6 O SO \u00e9 basicamente um Linux Ubuntu 18.04 com algumas otimiza\u00e7\u00f5es para ficar combativel com a Jetson Nano. Exercise Inicialize a Jetson Nano, n\u00e3o esque\u00e7a de ligar o monitor, teclado e mouse. Essas Jetson Nanos s\u00e3o utilizadas no labot\u00f3rio de informatica e algumas configura\u00e7\u00f5es j\u00e1 foram alteradas, como login e senha. - o login \u00e9 nuc404 e a senha \u00e9 t0rt1g4 Exercise Com a jetson inicializada, se ambiente com o sistema operacional. Conecte-se na internet, fa\u00e7a a atualiza\u00e7\u00e3o de pacotes(apt update).... Progress Continuar... Pisca led \u00b6 A jetson possui os GPIO para realizar conex\u00f5es com sensores e atuadoes. A pinagem fisica segue a mesma da Raspberry Pi. As fun\u00e7\u00f5es e m\u00e9todos da biblioteca tambem s\u00e3o iguais as da raspberry. Exercise Instale a bibliote seguindo os passos definidos neste guia https://github.com/NVIDIA/jetson-gpio . Nonte o circuito pisca led da aula anterior utilizado na raspberry pi. Rode o seu script python na jetson nano para piscar o led. Dica extra: - Usando os GPIO Progress Continuar... Deep Learning na borda! \u00b6 O processamento de video na Jetson Nano \u00e9 bastante eficiente devido a GPU que eleva a performance e o processamento. Detec\u00e7\u00e3o de objetos \u00b6 Abra o terminal e digite: sudo apt update sudo apt-get install git cmake libpython3-dev python3-numpy agora vamos clonar um repositorio com os modelos pre treinados de DNN: git clone --recursive https://www.github.com/dusty-nv/jetson-inference.git cd jetson-inference mkdir build && cd build cmake ../ make sudo make install sudo ldconfig Fazendo um teste para verificar se deu tudo certo.... cd jetson-inference/build/aarch64/bin python my-detection.py fonte link","title":"Aula3"},{"location":"aulas/lab3/#o-que-vamos-ver-neste-lab","text":"Nvidia Jetson Nano: O que \u00e9 isso? Como dar boot Vis\u00e3o computacional na Jetson Nano Progress Continuar...","title":"O que vamos ver neste lab?"},{"location":"aulas/lab3/#afinal-o-que-e-jetson-nano","text":"Basicamente, o NVIDIA Jetson Nano Developer Kit \u00e9 uma SBC que fornece uma solu\u00e7\u00e3o de computa\u00e7\u00e3o completa (com GPU integrada), logo pode ser utilizada para desenvolver/prototipar solu\u00e7\u00f5es em diversas areas. Assim como a Raspberry Pi, temos um SO completo e acesso a perifericos e GPIO. Para quem gosta de hardware, abaixo temos algumas informa\u00e7\u00f5es comparando a especifica\u00e7\u00f5es da Jetson Nano com oa Raspberry Pi. Exercise Compare as espec. dos dois SBC. Quais as maiores diferen\u00e7as encontradas? Em uma an\u00e1lise r\u00e1pida, podemos ver que as duas specs s\u00e3o parecidas, com exce\u00e7\u00e3o de um. A maior diferen\u00e7a nos recursos de computa\u00e7\u00e3o e gr\u00e1ficos entre essas duas placas \u00e9 que o NVIDIA Jetson Nano inclui uma GPU (processador gr\u00e1fico) de maior desempenho e capacidade, enquanto o Raspberry Pi 4 possui uma GPU multim\u00eddia integrada de baixo consumo de energia. Info Se voc\u00ea gosta de video game, provavelmente conhece o Nintendo Switch. O hardware do Switch \u00e9 bem similar a Jetson Nano pois a GPU NVIDIA Maxwell com 128 n\u00facleos CUDA do Jetson Nano \u00e9 na verdade a mesma GPU encontrada no Nintendo Switch. A CPU Cortex-A57 tamb\u00e9m \u00e9 a mesma. A diferen\u00e7a \u00e9 que o Nintendo Switch possui quatro n\u00facleos Cortex-A53 adicionais em seu hardware NVIDIA Tegra X1 SoC (System on a Chip). Progress Continuar... A NVIDIA possui uma documenta\u00e7\u00e3o oficial bem completa e detalhada desde setup e os primeiros passos at\u00e9 suporte para aspectos avan\u00e7ados com a Jetson Nano. Calma!!! nas primeiras itera\u00e7\u00f5es com a documenta\u00e7\u00e3o, sites e foruns \u00e9 normal ter um pouco de confus\u00e3o e n\u00e3o encontrar as respostas desejadas, mas com um pouco de pr\u00e1tica (e paci\u00eancia...) fica f\u00e1cil. Desta forma, bora navegar nesse oceano de informa\u00e7\u00f5es da NVIDIA.","title":"Afinal, o que \u00e9 Jetson Nano?"},{"location":"aulas/lab3/#como-dar-boot","text":"Exercise No seu notebook, acesse o site https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#intro e siga o passo-a-passo para realizar o boot da Jetson Nano. Info Embora sej\u00e1 uma etapa simples, o download pode demorar bastante, por esse motivo, vamos pular essa parte. Na teoria, as Jetson Nano j\u00e1 est\u00e1o com o boot feito. Progress Continuar...","title":"Como dar boot???"},{"location":"aulas/lab3/#hello-world-ligando-a-placa","text":"O SO \u00e9 basicamente um Linux Ubuntu 18.04 com algumas otimiza\u00e7\u00f5es para ficar combativel com a Jetson Nano. Exercise Inicialize a Jetson Nano, n\u00e3o esque\u00e7a de ligar o monitor, teclado e mouse. Essas Jetson Nanos s\u00e3o utilizadas no labot\u00f3rio de informatica e algumas configura\u00e7\u00f5es j\u00e1 foram alteradas, como login e senha. - o login \u00e9 nuc404 e a senha \u00e9 t0rt1g4 Exercise Com a jetson inicializada, se ambiente com o sistema operacional. Conecte-se na internet, fa\u00e7a a atualiza\u00e7\u00e3o de pacotes(apt update).... Progress Continuar...","title":"HELLO WORLD! Ligando a placa..."},{"location":"aulas/lab3/#pisca-led","text":"A jetson possui os GPIO para realizar conex\u00f5es com sensores e atuadoes. A pinagem fisica segue a mesma da Raspberry Pi. As fun\u00e7\u00f5es e m\u00e9todos da biblioteca tambem s\u00e3o iguais as da raspberry. Exercise Instale a bibliote seguindo os passos definidos neste guia https://github.com/NVIDIA/jetson-gpio . Nonte o circuito pisca led da aula anterior utilizado na raspberry pi. Rode o seu script python na jetson nano para piscar o led. Dica extra: - Usando os GPIO Progress Continuar...","title":"Pisca led"},{"location":"aulas/lab3/#deep-learning-na-borda","text":"O processamento de video na Jetson Nano \u00e9 bastante eficiente devido a GPU que eleva a performance e o processamento.","title":"Deep Learning na borda!"},{"location":"aulas/lab3/#deteccao-de-objetos","text":"Abra o terminal e digite: sudo apt update sudo apt-get install git cmake libpython3-dev python3-numpy agora vamos clonar um repositorio com os modelos pre treinados de DNN: git clone --recursive https://www.github.com/dusty-nv/jetson-inference.git cd jetson-inference mkdir build && cd build cmake ../ make sudo make install sudo ldconfig Fazendo um teste para verificar se deu tudo certo.... cd jetson-inference/build/aarch64/bin python my-detection.py fonte link","title":"Detec\u00e7\u00e3o de objetos"},{"location":"programacao/agenda/","text":"Agenda \u00b6 DATA AULA Conte\u00fado 04/11 AULA1 Introdu\u00e7\u00e3o Computa\u00e7\u00e3o Embarcada: Raspberry Pi: Getting Started 11/11 AULA2 Rasperry aplica\u00e7\u00f5es IoT 18/11 AULA3 Projeto aplica\u00e7\u00e3o com NVIDIA Jetson Nano","title":"Agenda"},{"location":"programacao/agenda/#agenda","text":"DATA AULA Conte\u00fado 04/11 AULA1 Introdu\u00e7\u00e3o Computa\u00e7\u00e3o Embarcada: Raspberry Pi: Getting Started 11/11 AULA2 Rasperry aplica\u00e7\u00f5es IoT 18/11 AULA3 Projeto aplica\u00e7\u00e3o com NVIDIA Jetson Nano","title":"Agenda"}]}